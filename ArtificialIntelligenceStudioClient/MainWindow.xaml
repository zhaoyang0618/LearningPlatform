<Metro:MetroWindow x:Class="ArtificialIntelligenceStudioClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ArtificialIntelligenceStudioClient"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:Metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:prism="http://prismlibrary.com/"
        xmlns:core="clr-namespace:ArtificialIntelligenceStudioClient.Core;assembly=ArtificialIntelligenceStudioClient.Core"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Metro:MetroWindow.LayoutTransform>
        <!-- todo: netcore => was using x:Reference before -->
        <ScaleTransform ScaleX="{Binding DataContext.Zoom, ElementName=TestContent}" ScaleY="{Binding DataContext.Zoom, ElementName=TestContent}" />
    </Metro:MetroWindow.LayoutTransform>

    <Metro:MetroWindow.Resources>
        <ResourceDictionary>
            <Style x:Key="{x:Type Fluent:BackstageTabControl}"
                   BasedOn="{StaticResource {x:Type Fluent:BackstageTabControl}}"
                   TargetType="{x:Type Fluent:BackstageTabControl}">
                <Setter Property="SelectedContentMargin" Value="0" />
            </Style>
        </ResourceDictionary>
    </Metro:MetroWindow.Resources>

    <Metro:MetroWindow.TitleTemplate>
        <DataTemplate>
            <Fluent:RibbonTitleBar x:Name="RibbonTitleBar"
                                   DataContext="{Binding ElementName=TestContent, Path=DataContext}"
                                   Header="{Binding Path=Title, RelativeSource={RelativeSource AncestorType=Window}}" />
        </DataTemplate>
    </Metro:MetroWindow.TitleTemplate>

    <Metro:MetroWindow.LeftWindowCommands>
        <Metro:WindowCommands>
            <Button>Left</Button>
        </Metro:WindowCommands>
    </Metro:MetroWindow.LeftWindowCommands>

    <Metro:MetroWindow.RightWindowCommands>
        <Metro:WindowCommands>
            <Button>Right</Button>
        </Metro:WindowCommands>
    </Metro:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Fluent:Ribbon Grid.Row="0">
            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <!--Tabs-->
            <Fluent:RibbonTabItem Header="人工智能">
                <Fluent:RibbonGroupBox Header="工具集">
                    <Fluent:Button Header="标注" Click="OnButtonAnnotationClick"   />
                    <Fluent:Button Header="测试" Click="OnButtonTestClick" />
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>
        </Fluent:Ribbon>
        <Grid Grid.Row="1" x:Name="gridChild"></Grid>
        <ContentControl prism:RegionManager.RegionName="{x:Static core:RegionNames.ContentRegion}" />
        <Fluent:StatusBar Grid.Row="2"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Visibility="{Binding IsChecked, ElementName=IsStatusBarVisibleCheckBox, Converter={StaticResource boolToVisibilityConverter}}">
            <Fluent:StatusBarItem Title="Words Width"
                                  HorizontalAlignment="Left"
                                  IsEnabled="False"
                                  Value="150">
                <TextBlock Text="150 px" />
            </Fluent:StatusBarItem>

            <Separator HorizontalAlignment="Left" />

            <Fluent:StatusBarItem Title="Selected Words"
                                  HorizontalAlignment="Left"
                                  Content="15 words"
                                  ToolTip="This is Selected Words"
                                  Value="15" />

            <Separator HorizontalAlignment="Left" />

            <Fluent:StatusBarItem Title="Used memory"
                                  HorizontalAlignment="Right"
                                  Value="{Binding UsedMemory, StringFormat={}{0:##\,000} KB}" />

            <Separator HorizontalAlignment="Right" />

            <Fluent:StatusBarItem Title="Zoom"
                                  HorizontalAlignment="Right"
                                  Value="{Binding Value, ElementName=zoomSlider, StringFormat={}{0:P}}" />

            <Fluent:StatusBarItem Title="Test (no content, no value)"
                                  HorizontalAlignment="Right" />

            <Fluent:StatusBarItem Title="Zoom Slider"
                                  HorizontalAlignment="Right">
                <Slider x:Name="zoomSlider"
                        IsDirectionReversed="False"
                        IsSnapToTickEnabled="True"
                        LargeChange="0.1"
                        Maximum="2.0"
                        Minimum="0.5"
                        SmallChange="0.1"
                        Style="{DynamicResource ZoomSliderStyle}"
                        TickFrequency="0.1"
                        Value="{Binding Zoom}" />
            </Fluent:StatusBarItem>
        </Fluent:StatusBar>

    </Grid>
</Metro:MetroWindow>
