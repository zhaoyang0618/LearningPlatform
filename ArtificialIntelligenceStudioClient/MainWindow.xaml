<Metro:MetroWindow x:Class="ArtificialIntelligenceStudioClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ArtificialIntelligenceStudioClient"
        xmlns:Fluent="clr-namespace:Fluent;assembly=Fluent"
        xmlns:Metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:prism="http://prismlibrary.com/"
        prism:ViewModelLocator.AutoWireViewModel="True"
        xmlns:core="clr-namespace:ArtificialIntelligenceStudioClient.Core;assembly=ArtificialIntelligenceStudioClient.Core"
        mc:Ignorable="d"
        Title="人工智能学习平台" Height="768" Width="1024" WindowState="Maximized">
    <Metro:MetroWindow.LayoutTransform>
        <!-- todo: netcore => was using x:Reference before -->
        <ScaleTransform ScaleX="{Binding DataContext.Zoom, ElementName=TestContent}" ScaleY="{Binding DataContext.Zoom, ElementName=TestContent}" />
    </Metro:MetroWindow.LayoutTransform>

    <!--<Metro:MetroWindow.Resources>
        <ResourceDictionary>
            <Style x:Key="{x:Type Fluent:BackstageTabControl}"
                   BasedOn="{StaticResource {x:Type Fluent:BackstageTabControl}}"
                   TargetType="{x:Type Fluent:BackstageTabControl}">
                <Setter Property="SelectedContentMargin" Value="0" />
            </Style>
        </ResourceDictionary>
    </Metro:MetroWindow.Resources>-->

    <Metro:MetroWindow.TitleTemplate>
        <DataTemplate>
            <Fluent:RibbonTitleBar x:Name="RibbonTitleBar"
                                   Header="人工智能学习平台" />
        </DataTemplate>
    </Metro:MetroWindow.TitleTemplate>

    <Metro:MetroWindow.LeftWindowCommands>
        <Metro:WindowCommands>
            <Button Click="OnButtonHomeClick" ToolTip="首页" Content="{iconPacks:Material Kind=Home}"></Button>
        </Metro:WindowCommands>
    </Metro:MetroWindow.LeftWindowCommands>

    <Metro:MetroWindow.RightWindowCommands>
        <Metro:WindowCommands>
            <Button Visibility="Collapsed">注销</Button>
        </Metro:WindowCommands>
    </Metro:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Fluent:Ribbon Grid.Row="0" x:Name="ribbonMain">
            <!--Backstage-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage>
                    <Fluent:BackstageTabControl x:Name="menuMain">
                        <!--<Fluent:BackstageTabItem Header="首页">
                            <Fluent:BackstageTabItem.Content>
                                <Grid>
                                    <TextBlock>Hello</TextBlock>
                                </Grid>
                            </Fluent:BackstageTabItem.Content>
                        </Fluent:BackstageTabItem>
                        <Fluent:BackstageTabItem Header="人工智能"/>-->
                        <Fluent:Button Click="OnButtonHomeClick"
                                           Header="首页"
                                           Icon="{iconPacks:Material Kind=Home}" />
                        <Fluent:Button VerticalAlignment="Bottom"
                                           Click="OnButtonExitClick"
                                           DockPanel.Dock="Bottom"
                                           Header="退出"
                                           Icon="{iconPacks:Material Kind=ExitToApp}"
                                           KeyTip="X" />
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <!--Tabs-->
            <!--<Fluent:RibbonTabItem Header="人工智能">
                <Fluent:RibbonGroupBox>
                    <Fluent:Button Header="标注" Click="OnButtonAnnotationClick"  Icon="{Binding}" />
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>-->
        </Fluent:Ribbon>

        <Grid x:Name="panelLogon">
        </Grid>
        
        <ContentControl Grid.Row="1" prism:RegionManager.RegionName="{x:Static core:RegionNames.ContentRegion}" x:Name="panelContent"/>
        
        <Fluent:StatusBar Grid.Row="2"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Visibility="{Binding IsChecked, ElementName=IsStatusBarVisibleCheckBox, Converter={StaticResource boolToVisibilityConverter}}">
            <Fluent:StatusBarItem Title="就绪"
                                  HorizontalAlignment="Left"
                                  IsEnabled="False"
                                  Value="150">
                <TextBlock Text="就绪" />
            </Fluent:StatusBarItem>

            <Separator HorizontalAlignment="Left" />

            <Fluent:StatusBarItem Title="Used memory"
                                  HorizontalAlignment="Right"
                                  Value="{Binding UsedMemory, StringFormat={}{0:##\,000} KB}" />

            <Separator HorizontalAlignment="Right" />

            <Fluent:StatusBarItem Title="Zoom"
                                  HorizontalAlignment="Right"
                                  Value="{Binding Value, ElementName=zoomSlider, StringFormat={}{0:P}}" />

            <Fluent:StatusBarItem Title="Test (no content, no value)"
                                  HorizontalAlignment="Right" />

        </Fluent:StatusBar>
    </Grid>
</Metro:MetroWindow>
